{
    "docs": [
        {
            "location": "/", 
            "text": "User Manual\n\n\nSoftware requirements\n\n\n\n\nAlthough the application can run on any operation systems, this manual is target for Ubuntu Linux operation system.\n\n\nA reliable Internet connection on the server that you are installing.\n\n\nEither a static IP or dynamic IP assigned to the server.\n\n\nThe network or router must allow TCP port \n5000\n for incoming traffic to the server.\n\n\nCheck the server has installed Python 2.7.x.\n\n\n\n\npython --version\n\n\n\n\n\n\nCheck the bower package manager tool is installed.\n\n\n\n\nbower --version\n\n\n\n\n\n\nHardware requirements\n\n\n\n\nDual Core Intel or AMD CPU with 64-bit Architecture.\n\n\n4 GB Memory.\n\n\n20 GB SSD or SATA Hard Drive.\n\n\nEthernet Port Network or Wifi\n\n\n\n\nInstallation\n\n\nExecute the following commands in a Linux shell Terminal.\n\n\n\n\nPing to check the Internet connection. Press Ctl+D to exit.\n\n\n\n\ncedar@ubuntu:~/app$ ping www.google.com\nPING www.google.com (172.217.6.68) 56(84) bytes of data.\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=1 ttl=128 time=12.0 ms\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=2 ttl=128 time=14.2 ms\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=3 ttl=128 time=13.3 ms\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=4 ttl=128 time=13.9 ms\n^C\n--- www.google.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3006ms\nrtt min/avg/max/mdev = 12.046/13.386/14.210/0.844 ms\n\n\n\n\n\n\nCreate a \napp\n folder under the current user home path. E.g. /home/cedar. Delete the \napp\n folder to ensure there is no existing one.\n\n\n\n\ncedar@ubuntu:~$ rm -rf app\ncedar@ubuntu:~$ mkdir app\n\n\n\n\n\n\nCreate a \nbackup\n folder to store database backup files.\n\n\n\n\ncedar@ubuntu:~$ mkdir backup\n\n\n\n\n\n\ncd app\n - Go inside the app folder you just created.\n\n\n\n\ncedar@ubuntu:~$ cd app\n\n\n\n\n\n\nCheck the current path is under \n/home/cedar/app\n\n\n\n\ncedar@ubuntu:~/app$ pwd\n/home/cedar/app\n\n\n\n\n\n\nDownload the source code:\n\n\n\n\ncedar@ubuntu:~/app$ git clone https://github.com/sithu/prod-mgmt\n\n\n\n\n\n\nGo inside the prod-mgmt folder.\n\n\n\n\ncedar@ubuntu:~/app$ cd prod-mgmt\n\n\n\n\n\n\nCreate a Python virtual enviroment.\n\n\n\n\ncedar@ubuntu:~/app/prod-mgmt$ virtualenv flask\n\n\n\n\nThe program 'virtualenv' is currently not installed. You can install it by typing:\nsudo apt install virtualenv\n\n\n\n\nIf you get this error, then you need to install \nvirtualenv\n via:\n\n\nIf it asks for password, enter Cedar's account password.\n\n\ncedar@ubuntu:~/app/prod-mgmt$ sudo apt install virtualenv\n\n\n\n\n\n\nLoad the virtual environment. Then, you should able to see \n(flask)\n at the beginning of the command prompt.\n\n\n\n\ncedar@ubuntu:~/app/prod-mgmt$ . .env\n(flask) cedar@ubuntu:~/app/prod-mgmt$\n\n\n\n\n\n\nInstall all required Python PIP modules. At the end, you should see all the installed Python packages as below:\n\n\n\n\n(flask) cedar@ubuntu:~/app/prod-mgmt$ pip install -r requirements.txt\n\n\n\n\n\n\nIf you get this error: \nfailed with error code 1 in /tmp/pip-build-g7tapu/Pillow/\n, then you run this apt-get install command and re-run the \npip install\n command.\n\n\n(flask) cedar@ubuntu:~/app/prod-mgmt$ sudo apt-get install python-dev\n(flask) cedar@ubuntu:~/app/prod-mgmt$ pip install -r requirements.txt\n\n\n\n\n\n\nFinally, install all front-end JavaScript and CSS libraries.\n\n\n\n\n(flask) cedar@ubuntu:~/app/prod-mgmt$ bower install", 
            "title": "Installation"
        }, 
        {
            "location": "/#user-manual", 
            "text": "", 
            "title": "User Manual"
        }, 
        {
            "location": "/#software-requirements", 
            "text": "Although the application can run on any operation systems, this manual is target for Ubuntu Linux operation system.  A reliable Internet connection on the server that you are installing.  Either a static IP or dynamic IP assigned to the server.  The network or router must allow TCP port  5000  for incoming traffic to the server.  Check the server has installed Python 2.7.x.   python --version   Check the bower package manager tool is installed.   bower --version", 
            "title": "Software requirements"
        }, 
        {
            "location": "/#hardware-requirements", 
            "text": "Dual Core Intel or AMD CPU with 64-bit Architecture.  4 GB Memory.  20 GB SSD or SATA Hard Drive.  Ethernet Port Network or Wifi", 
            "title": "Hardware requirements"
        }, 
        {
            "location": "/#installation", 
            "text": "Execute the following commands in a Linux shell Terminal.   Ping to check the Internet connection. Press Ctl+D to exit.   cedar@ubuntu:~/app$ ping www.google.com\nPING www.google.com (172.217.6.68) 56(84) bytes of data.\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=1 ttl=128 time=12.0 ms\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=2 ttl=128 time=14.2 ms\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=3 ttl=128 time=13.3 ms\n64 bytes from sfo07s17-in-f68.1e100.net (172.217.6.68): icmp_seq=4 ttl=128 time=13.9 ms\n^C\n--- www.google.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3006ms\nrtt min/avg/max/mdev = 12.046/13.386/14.210/0.844 ms   Create a  app  folder under the current user home path. E.g. /home/cedar. Delete the  app  folder to ensure there is no existing one.   cedar@ubuntu:~$ rm -rf app\ncedar@ubuntu:~$ mkdir app   Create a  backup  folder to store database backup files.   cedar@ubuntu:~$ mkdir backup   cd app  - Go inside the app folder you just created.   cedar@ubuntu:~$ cd app   Check the current path is under  /home/cedar/app   cedar@ubuntu:~/app$ pwd\n/home/cedar/app   Download the source code:   cedar@ubuntu:~/app$ git clone https://github.com/sithu/prod-mgmt   Go inside the prod-mgmt folder.   cedar@ubuntu:~/app$ cd prod-mgmt   Create a Python virtual enviroment.   cedar@ubuntu:~/app/prod-mgmt$ virtualenv flask  The program 'virtualenv' is currently not installed. You can install it by typing:\nsudo apt install virtualenv  If you get this error, then you need to install  virtualenv  via:  If it asks for password, enter Cedar's account password.  cedar@ubuntu:~/app/prod-mgmt$ sudo apt install virtualenv   Load the virtual environment. Then, you should able to see  (flask)  at the beginning of the command prompt.   cedar@ubuntu:~/app/prod-mgmt$ . .env\n(flask) cedar@ubuntu:~/app/prod-mgmt$   Install all required Python PIP modules. At the end, you should see all the installed Python packages as below:   (flask) cedar@ubuntu:~/app/prod-mgmt$ pip install -r requirements.txt   If you get this error:  failed with error code 1 in /tmp/pip-build-g7tapu/Pillow/ , then you run this apt-get install command and re-run the  pip install  command.  (flask) cedar@ubuntu:~/app/prod-mgmt$ sudo apt-get install python-dev\n(flask) cedar@ubuntu:~/app/prod-mgmt$ pip install -r requirements.txt   Finally, install all front-end JavaScript and CSS libraries.   (flask) cedar@ubuntu:~/app/prod-mgmt$ bower install", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Run the Application\n\n\nServer Startup\n\n\nExecute this server startup command in the same terminal that you installed the application.\n\n\ngunicorn --access-logfile - --log-file /tmp/prod-mgmt.log --bind 0.0.0.0:5000 --workers 4 --log-level info --capture-output run:app\n\n\nExample: \n\n\n(flask) cedar@ubuntu:~/app/prod-mgmt$ gunicorn --access-logfile - --log-file /tmp/prod-mgmt.log --bind 0.0.0.0:5000 --workers 4 --log-level info --capture-output run:app\n\n\n\n\nNow, you can load the application in a web browser. Note: Open FireFox and enter this URL in the browser.\n\n\nhttp://{MACHINE_IP}:5000/\n\n\n\n\n\n\nHow to find server machine IP?\n\n\nOpen the another Terminal window and enter this command:\n\n\nifconfig -a\n\n\n\n\n\n\nLogging in to the Application\n\n\nOnce you can see the home page in the browser, go ahead and click the \nLog In\n button at the bottom of the page. Then, it will take you to the \nLog In\n page.\n\n\n\n\nCongratulations! You have successfully installed the application.", 
            "title": "Run the Application"
        }, 
        {
            "location": "/getting-started/#run-the-application", 
            "text": "", 
            "title": "Run the Application"
        }, 
        {
            "location": "/getting-started/#server-startup", 
            "text": "Execute this server startup command in the same terminal that you installed the application.  gunicorn --access-logfile - --log-file /tmp/prod-mgmt.log --bind 0.0.0.0:5000 --workers 4 --log-level info --capture-output run:app  Example:   (flask) cedar@ubuntu:~/app/prod-mgmt$ gunicorn --access-logfile - --log-file /tmp/prod-mgmt.log --bind 0.0.0.0:5000 --workers 4 --log-level info --capture-output run:app  Now, you can load the application in a web browser. Note: Open FireFox and enter this URL in the browser.  http://{MACHINE_IP}:5000/", 
            "title": "Server Startup"
        }, 
        {
            "location": "/getting-started/#how-to-find-server-machine-ip", 
            "text": "Open the another Terminal window and enter this command:  ifconfig -a", 
            "title": "How to find server machine IP?"
        }, 
        {
            "location": "/getting-started/#logging-in-to-the-application", 
            "text": "Once you can see the home page in the browser, go ahead and click the  Log In  button at the bottom of the page. Then, it will take you to the  Log In  page.", 
            "title": "Logging in to the Application"
        }, 
        {
            "location": "/getting-started/#congratulations-you-have-successfully-installed-the-application", 
            "text": "", 
            "title": "Congratulations! You have successfully installed the application."
        }, 
        {
            "location": "/machine/", 
            "text": "Machine\n\n\nMachines are required for the order and production entry creation, and team scheduling.\n\n\nAdd New Machine\n\n\nIn the \nMachine\n section, click on \nCreate\n tab.\n\n\n\n\nMachine name should be posted on the actual machine so that the user can match during the data entry.\n\n\nStatus\n\n\nON \n\n\nOFF (shut down to save power)\n\n\nBROKEN (currently fixing on the issues)\n\n\nNOT_IN_USE (No longer used or deprecated)\n\n\n\n\n\n\nTeam Request\n uses all the machine except the ones with the \nNOT_IN_USE\n status.\n\n\nMachine photo field is optional.\n\n\nScheduled Assemblers\n is the total number of assemblers to be used in the \nTeam Request\n process a.k.a. scheduling.\n\n\nLead to Machine Ratio\n is the ratio of how many machines that you want to assign to a lead. Example: 1-2 means \none lead - two machines\n. \n\n\n\n\n\n\nUpdate Machine\n\n\nClick on the \npencil\n icon to edit a machine details.\n\n\n\n\nDelete Machine\n\n\nClick on the bin icon to delete a machine.\n\n\n\n\nList Machine\n\n\nList all the Machines. There are some important columns to notice:\n\n\n\n\nScheduled Assemblers\n Column\n\n\n\n\nThis column shows the number of scheduled assemblers (workers). The \nTeam Request\n [Employees \n Team Request] uses this number to form a team. \nx2\n means two assemblers will be assigned to that machine.\n\n\n\n\nOrders\n Column\n\n\n\n\nThis column shows the number of assemblers of the current \nIN_PROGRESS\n order, excluding lead, required by the product. Once the order is completed, the product icon will be disappeared.\n\n\n\n\nIf \nScheduled Assemblers\n \n \nOrders\n xN counts, that means the machine is overstaff.\n\n\nIf \nScheduled Assemblers\n \n \nOrders\n xN counts, that means the machine is understaff.", 
            "title": "Machine"
        }, 
        {
            "location": "/machine/#machine", 
            "text": "Machines are required for the order and production entry creation, and team scheduling.", 
            "title": "Machine"
        }, 
        {
            "location": "/machine/#add-new-machine", 
            "text": "In the  Machine  section, click on  Create  tab.   Machine name should be posted on the actual machine so that the user can match during the data entry.  Status  ON   OFF (shut down to save power)  BROKEN (currently fixing on the issues)  NOT_IN_USE (No longer used or deprecated)    Team Request  uses all the machine except the ones with the  NOT_IN_USE  status.  Machine photo field is optional.  Scheduled Assemblers  is the total number of assemblers to be used in the  Team Request  process a.k.a. scheduling.  Lead to Machine Ratio  is the ratio of how many machines that you want to assign to a lead. Example: 1-2 means  one lead - two machines .", 
            "title": "Add New Machine"
        }, 
        {
            "location": "/machine/#update-machine", 
            "text": "Click on the  pencil  icon to edit a machine details.", 
            "title": "Update Machine"
        }, 
        {
            "location": "/machine/#delete-machine", 
            "text": "Click on the bin icon to delete a machine.", 
            "title": "Delete Machine"
        }, 
        {
            "location": "/machine/#list-machine", 
            "text": "List all the Machines. There are some important columns to notice:   Scheduled Assemblers  Column   This column shows the number of scheduled assemblers (workers). The  Team Request  [Employees   Team Request] uses this number to form a team.  x2  means two assemblers will be assigned to that machine.   Orders  Column   This column shows the number of assemblers of the current  IN_PROGRESS  order, excluding lead, required by the product. Once the order is completed, the product icon will be disappeared.   If  Scheduled Assemblers     Orders  xN counts, that means the machine is overstaff.  If  Scheduled Assemblers     Orders  xN counts, that means the machine is understaff.", 
            "title": "List Machine"
        }, 
        {
            "location": "/color/", 
            "text": "Color\n\n\nOne of the aspects of product is color. Therefore, colors should be created first before product.\n\n\nAdd New Color\n\n\nTo add new color, click the \nCreate\n tab in the Color section. Then, select color by clicking the color bar and give the color name you like. Finally, click \nSave\n.\n\n\n\n\nView, Edit, and Delete\n\n\n\n\nClick \neye\n icon for viewing a color details.\n\n\nClick \npencil\n icon for editing a color.\n\n\nClick \nbin\n icon for deleting a color.\n\n\n\n\nMulti-Delete\n\n\nIf you want to delete multiple items, select each one and click \nWith Selected \n Delete\n link.", 
            "title": "Color"
        }, 
        {
            "location": "/color/#color", 
            "text": "One of the aspects of product is color. Therefore, colors should be created first before product.", 
            "title": "Color"
        }, 
        {
            "location": "/color/#add-new-color", 
            "text": "To add new color, click the  Create  tab in the Color section. Then, select color by clicking the color bar and give the color name you like. Finally, click  Save .", 
            "title": "Add New Color"
        }, 
        {
            "location": "/color/#view-edit-and-delete", 
            "text": "Click  eye  icon for viewing a color details.  Click  pencil  icon for editing a color.  Click  bin  icon for deleting a color.", 
            "title": "View, Edit, and Delete"
        }, 
        {
            "location": "/color/#multi-delete", 
            "text": "If you want to delete multiple items, select each one and click  With Selected   Delete  link.", 
            "title": "Multi-Delete"
        }, 
        {
            "location": "/product/", 
            "text": "Product\n\n\nProduct is the core part of the production management system and it has relationship to production entry, machine, color, and user or employee.\n\n\nCreate Product\n\n\nA product is defined by the following fields:\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nName\n\n\nString\n\n\nUnique product name\n\n\n\n\n\n\nImage\n\n\nPNG, JPG or JPEG\n\n\nproduct photo - File size: the smaller is the better. Image file name must be unique!\n\n\n\n\n\n\nColors\n\n\nColor\n\n\none or more colors\n\n\n\n\n\n\nMulti Colors Ratio*\n\n\nString\n\n\nIf a product has multiple colors, you can define a ratio: 50% (Green) - 50% (Red), 50+50 = 100 quantity\n\n\n\n\n\n\nDefault Machine\n\n\nMachine\n\n\nIn production of any order for this product, this default machine will always be used.\n\n\n\n\n\n\nWeight (g)\n\n\nInteger (x \n 0)\n\n\nProduct weight in gram. The value must be greater than zero.\n\n\n\n\n\n\nTime To Build (sec)\n\n\nInteger (x \n 0)\n\n\nEstimated time to build one item in seconds.\n\n\n\n\n\n\nPrice\n\n\nInteger (x \n 0)\n\n\nSelling price (Optional)\n\n\n\n\n\n\nEmployee Required\n\n\nInteger (x \n 0)\n\n\nNumber of assemblers required excluding the team lead\n\n\n\n\n\n\nRaw Material Unit Weight (g)\n\n\nInteger (x \n 0)\n\n\nRaw material single unit (per bag) weight in gram\n\n\n\n\n\n\n\n\n\n\n*If you do not want multi-colors combination, you can simply setup a different product for each color.\n\n\n\n\n\n\nView details, Edit, and Delete\n\n\nSame as Machine's view, edit, and delete.", 
            "title": "Product"
        }, 
        {
            "location": "/product/#product", 
            "text": "Product is the core part of the production management system and it has relationship to production entry, machine, color, and user or employee.", 
            "title": "Product"
        }, 
        {
            "location": "/product/#create-product", 
            "text": "A product is defined by the following fields:     Field  Type  Description      Name  String  Unique product name    Image  PNG, JPG or JPEG  product photo - File size: the smaller is the better. Image file name must be unique!    Colors  Color  one or more colors    Multi Colors Ratio*  String  If a product has multiple colors, you can define a ratio: 50% (Green) - 50% (Red), 50+50 = 100 quantity    Default Machine  Machine  In production of any order for this product, this default machine will always be used.    Weight (g)  Integer (x   0)  Product weight in gram. The value must be greater than zero.    Time To Build (sec)  Integer (x   0)  Estimated time to build one item in seconds.    Price  Integer (x   0)  Selling price (Optional)    Employee Required  Integer (x   0)  Number of assemblers required excluding the team lead    Raw Material Unit Weight (g)  Integer (x   0)  Raw material single unit (per bag) weight in gram      *If you do not want multi-colors combination, you can simply setup a different product for each color.", 
            "title": "Create Product"
        }, 
        {
            "location": "/product/#view-details-edit-and-delete", 
            "text": "Same as Machine's view, edit, and delete.", 
            "title": "View details, Edit, and Delete"
        }, 
        {
            "location": "/shift/", 
            "text": "Shift\n\n\nA shift is a working hour time window in 24-hour day.\n\n\nGo to \nEmployee\n \n \nShift\n to view, edit, create, and delete shifts.\n\n\nThe total hours for all shifts must be less than or equal to 24 hours.", 
            "title": "Shift"
        }, 
        {
            "location": "/shift/#shift", 
            "text": "A shift is a working hour time window in 24-hour day.  Go to  Employee     Shift  to view, edit, create, and delete shifts.  The total hours for all shifts must be less than or equal to 24 hours.", 
            "title": "Shift"
        }, 
        {
            "location": "/role/", 
            "text": "Role\n\n\nA role defines a set of permissions and it can be assigned to users. By default, the application comes with the following roles:\n\n\n\n\n\n\n\n\nRole\n\n\nPermission\n\n\n\n\n\n\n\n\n\n\nassembler\n\n\ncan_read\n\n\n\n\n\n\nlead\n\n\ncan_read, can_edit\n\n\n\n\n\n\nmanager\n\n\ncan_read, can_edit, can_create, can_view_details\n\n\n\n\n\n\nadmin\n\n\ncan_read, can_edit, can_create, can_view_details, can_delete, can_export\n\n\n\n\n\n\n\n\nIn order to update production entries, one needs to have at least the \nlead\n role. Even if you create a new role, you cannot apply any permission to it as these roles are pre-defined and built into the application.", 
            "title": "Role"
        }, 
        {
            "location": "/role/#role", 
            "text": "A role defines a set of permissions and it can be assigned to users. By default, the application comes with the following roles:     Role  Permission      assembler  can_read    lead  can_read, can_edit    manager  can_read, can_edit, can_create, can_view_details    admin  can_read, can_edit, can_create, can_view_details, can_delete, can_export     In order to update production entries, one needs to have at least the  lead  role. Even if you create a new role, you cannot apply any permission to it as these roles are pre-defined and built into the application.", 
            "title": "Role"
        }, 
        {
            "location": "/user/", 
            "text": "User\n\n\nEmployee\n \n \nUser\n\n\nUser is one essential entities for the application to work beginning from log in to team scheduling.\n\n\nAdd User\n\n\nNew user can be added via \n\n\n1. \nEmployee\n \n \nUser\n : \nCreate\n tab\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nName\n\n\nString\n\n\nUser/Employee fullname\n\n\n\n\n\n\nGender\n\n\nOption\n\n\nM\n for Male, \nF\n for Female\n\n\n\n\n\n\nEmail\n\n\nString\n\n\nEmail is required for users who need to login to the application.\n\n\n\n\n\n\nPassword\n\n\nString\n\n\nPassword in this form is plain text so other can see it. If you want user's password encrypted, use the second approach to create new users from the Login page.\n\n\n\n\n\n\nRoles*\n\n\nOption\n\n\nSelect a role from the dropdown list or you can leave it as empty if you do not want the user to access the application.\n\n\n\n\n\n\nShift\n\n\nOption\n\n\nSelect a shift for the user\n\n\n\n\n\n\nPhone\n\n\nString\n\n\nUser phone number\n\n\n\n\n\n\nActive\n\n\nYES/NO\n\n\nYES\n - User works for the company, \nNO\n - User no longer works for the company.\n\n\n\n\n\n\nIs In\n\n\nYES/NO\n\n\nYES\n - User is checked in, \nNO\n - User is out.\n\n\n\n\n\n\nImage\n\n\nPNG, JPG, JPEG\n\n\nUser photo\n\n\n\n\n\n\n\n\n\n\nTeam Request\n (Scheduling) uses \nActive\n users with either \nlead\n or \nassembler\n role only. Other roles are excluded.\n\n\n\n\n\n\n2. \nLogin\n page \n \nregister for an account\n link at the bottom of the page.\n\n\n\n\n\n\nView, Edit, and Delete\n\n\nEmployees\n \n \nUser\n \n\n\nSame as others.", 
            "title": "User"
        }, 
        {
            "location": "/user/#user", 
            "text": "Employee     User  User is one essential entities for the application to work beginning from log in to team scheduling.", 
            "title": "User"
        }, 
        {
            "location": "/user/#add-user", 
            "text": "New user can be added via", 
            "title": "Add User"
        }, 
        {
            "location": "/user/#1-employee-user-create-tab", 
            "text": "Field  Type  Description      Name  String  User/Employee fullname    Gender  Option  M  for Male,  F  for Female    Email  String  Email is required for users who need to login to the application.    Password  String  Password in this form is plain text so other can see it. If you want user's password encrypted, use the second approach to create new users from the Login page.    Roles*  Option  Select a role from the dropdown list or you can leave it as empty if you do not want the user to access the application.    Shift  Option  Select a shift for the user    Phone  String  User phone number    Active  YES/NO  YES  - User works for the company,  NO  - User no longer works for the company.    Is In  YES/NO  YES  - User is checked in,  NO  - User is out.    Image  PNG, JPG, JPEG  User photo      Team Request  (Scheduling) uses  Active  users with either  lead  or  assembler  role only. Other roles are excluded.", 
            "title": "1. Employee &gt; User : Create tab"
        }, 
        {
            "location": "/user/#2-login-page-register-for-an-account-link-at-the-bottom-of-the-page", 
            "text": "", 
            "title": "2. Login page &gt; register for an account link at the bottom of the page."
        }, 
        {
            "location": "/user/#view-edit-and-delete", 
            "text": "Employees     User    Same as others.", 
            "title": "View, Edit, and Delete"
        }, 
        {
            "location": "/team/", 
            "text": "Team Request and Team\n\n\nTeam Request\n\n\nEmployee\n \n \nTeam Request\n\n\nIn order to create teams for any number of days, you need to submit a \nTeam Request\n. The team request will check:\n\n\n\n\n\n\n\n\nEmployee availability (isActive or not) and filter out the \nlead\n and \nassembler\n roles\n\n\n\n\n\n\n\n\n\n\nMachine availability excluding \nNOT_IN_USE\n.\n\n\n\n\n\n\n\n\nand it will then form teams by \nrandomly\n selecting the \nassembler\n and \nlead\n users and using\n\n\n\n\n\n\n\n\nScheduled Assemblers  \n\n\n\n\n\n\n\n\n\n\nLead to Machine Ratio \n\n\n\n\n\n\n\n\nsettings defined in each machine. For example, if Machine A sets \nScheduled Assemblers\n to \n2\n, the team request/builder will allocate two assemblers to the Machine A and likewise to \nlead\n.\n\n\n\n\nIn the above screenshot, a new team request is making for one week schedule with Sunday as a day off.\n\n\nTeam Request List\n\n\n\n\n\n\nUnlike other entities, do not try to edit any team requests as it will not re-generate (re-schedule) the teams.\n\n\n\n\nTeam\n\n\nOnce you submit a team reqeust, you can check the output (teams) a.k.a \nSchedule\n at \nEmployee\n \n \nTeam\n.\n\n\n\n\n\n\nWhen you have more assemblers/leads than the number of machines, all extra assemblers and leads will go into \nStandbys\n. The \nStandbys\n resources can be distributed into any understaff machines.\n\n\n\n\nView, Edit, and Delete\n\n\nYou can view team detials, edit, and delete teams if needed.", 
            "title": "Team (Schedule)"
        }, 
        {
            "location": "/team/#team-request-and-team", 
            "text": "", 
            "title": "Team Request and Team"
        }, 
        {
            "location": "/team/#team-request", 
            "text": "Employee     Team Request  In order to create teams for any number of days, you need to submit a  Team Request . The team request will check:     Employee availability (isActive or not) and filter out the  lead  and  assembler  roles      Machine availability excluding  NOT_IN_USE .     and it will then form teams by  randomly  selecting the  assembler  and  lead  users and using     Scheduled Assemblers        Lead to Machine Ratio      settings defined in each machine. For example, if Machine A sets  Scheduled Assemblers  to  2 , the team request/builder will allocate two assemblers to the Machine A and likewise to  lead .   In the above screenshot, a new team request is making for one week schedule with Sunday as a day off.", 
            "title": "Team Request"
        }, 
        {
            "location": "/team/#team-request-list", 
            "text": "Unlike other entities, do not try to edit any team requests as it will not re-generate (re-schedule) the teams.", 
            "title": "Team Request List"
        }, 
        {
            "location": "/team/#team", 
            "text": "Once you submit a team reqeust, you can check the output (teams) a.k.a  Schedule  at  Employee     Team .    When you have more assemblers/leads than the number of machines, all extra assemblers and leads will go into  Standbys . The  Standbys  resources can be distributed into any understaff machines.", 
            "title": "Team"
        }, 
        {
            "location": "/team/#view-edit-and-delete", 
            "text": "You can view team detials, edit, and delete teams if needed.", 
            "title": "View, Edit, and Delete"
        }, 
        {
            "location": "/order/", 
            "text": "Order and Production Entry\n\n\n1. Check Orders\n\n\nOnce you have setup Machine, Color, Product, Shift, User, and Team; you can now start processing orders by creating a production entry for each order per machine.\n\n\nBefore you create a new Production Entry, first view the order list and check for \n\n\n\n\nOrder Id\n\n\nOrder with the 'NEW' Status\n\n\nOrder with no production entries\n\n\n\n\nYou may want to create new production entries for the new Orders without production entry. The only condition you want to create another production entry for the \nIN_PROGRESS\n orders is:\n\n\n\n\nThe order is still \nIN_PROGRESS\n when a Shift is ended.\n\n\n\n\n\n\nIn the above list, you will see that Order Id 1 and 2 already have production entries (Id: 1 and 2), but their status is still 'NEW'. Why? It is because the someone has created production entries and they have not started the production yet. \n\n\nIn the Order Id 3 and 4, there is no production entry and these orders are the ones that you need to create production entries for current shift with the assiged team for the assigned machine Id.\n\n\n\n\nThe production Entry creation should happen at the assigned machine for a given order while meeting the scheduled team.\n\n\n\n\n2. Create Production Entries\n\n\nNow, click on \nProduction Entry\n tab from the menu bar and see the existing production entries.\n\n\nIdeally, this production entry creation process can be done by a manager or lead who will walk down the machine lanes and create production entires for the orders with these conditions:\n\n\n\n\nThe \nIN_PROGRESS\n orders with carryover from the previous shift.\n\n\nThe \nNEW\n orders based on the order id in ascending order: 1, 2, 3, etc..\n\n\n\n\nClick \nCreate\n tab to creat a new production entry. In the new production entry form:\n\n\n\n\nSelect current shift\n\n\nSelect the order\n\n\nSelect team lead name who is currently assigned to the machine.\n\n\nSelect all team members who are currently assigned to the machine.\n\n\nFinally, click \nSave\n.\n\n\n\n\n\n\nRepeat the same steps for all the orders that you want to process for the current shift.\n\n\nCreate Order Video\n\n\n3. Update Production Entries\n\n\nBefore you update a production entry, check \nRemaning\n count first. Click edit button :black_nib: on the production entry that you are going to update.\n\n\nUpdate hourly number of good and number of bad in comma-separated format: \n100,125,110\n\n\n\n\nUpdate Production Entries Video", 
            "title": "Order and Production Entry"
        }, 
        {
            "location": "/order/#order-and-production-entry", 
            "text": "", 
            "title": "Order and Production Entry"
        }, 
        {
            "location": "/order/#1-check-orders", 
            "text": "Once you have setup Machine, Color, Product, Shift, User, and Team; you can now start processing orders by creating a production entry for each order per machine.  Before you create a new Production Entry, first view the order list and check for    Order Id  Order with the 'NEW' Status  Order with no production entries   You may want to create new production entries for the new Orders without production entry. The only condition you want to create another production entry for the  IN_PROGRESS  orders is:   The order is still  IN_PROGRESS  when a Shift is ended.    In the above list, you will see that Order Id 1 and 2 already have production entries (Id: 1 and 2), but their status is still 'NEW'. Why? It is because the someone has created production entries and they have not started the production yet.   In the Order Id 3 and 4, there is no production entry and these orders are the ones that you need to create production entries for current shift with the assiged team for the assigned machine Id.   The production Entry creation should happen at the assigned machine for a given order while meeting the scheduled team.", 
            "title": "1. Check Orders"
        }, 
        {
            "location": "/order/#2-create-production-entries", 
            "text": "Now, click on  Production Entry  tab from the menu bar and see the existing production entries.  Ideally, this production entry creation process can be done by a manager or lead who will walk down the machine lanes and create production entires for the orders with these conditions:   The  IN_PROGRESS  orders with carryover from the previous shift.  The  NEW  orders based on the order id in ascending order: 1, 2, 3, etc..   Click  Create  tab to creat a new production entry. In the new production entry form:   Select current shift  Select the order  Select team lead name who is currently assigned to the machine.  Select all team members who are currently assigned to the machine.  Finally, click  Save .    Repeat the same steps for all the orders that you want to process for the current shift.  Create Order Video", 
            "title": "2. Create Production Entries"
        }, 
        {
            "location": "/order/#3-update-production-entries", 
            "text": "Before you update a production entry, check  Remaning  count first. Click edit button :black_nib: on the production entry that you are going to update.  Update hourly number of good and number of bad in comma-separated format:  100,125,110   Update Production Entries Video", 
            "title": "3. Update Production Entries"
        }, 
        {
            "location": "/history/", 
            "text": "Histroy", 
            "title": "History for Reporting"
        }, 
        {
            "location": "/history/#histroy", 
            "text": "", 
            "title": "Histroy"
        }, 
        {
            "location": "/dashboard/", 
            "text": "Dashboard\n\n\nThe dashboard shows all \nIN_PROGRESS\n orders status in real time with the 30 seconds interval. Each donut chart represents an order running on a machine with production entry details:\n\n\n\n\nOrder Quantity\n\n\nNumber of Good\n\n\nNumber of Bad", 
            "title": "Dashboard"
        }, 
        {
            "location": "/dashboard/#dashboard", 
            "text": "The dashboard shows all  IN_PROGRESS  orders status in real time with the 30 seconds interval. Each donut chart represents an order running on a machine with production entry details:   Order Quantity  Number of Good  Number of Bad", 
            "title": "Dashboard"
        }, 
        {
            "location": "/db/", 
            "text": "Database Backup", 
            "title": "Database Backup"
        }, 
        {
            "location": "/db/#database-backup", 
            "text": "", 
            "title": "Database Backup"
        }
    ]
}